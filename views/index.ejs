<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Maho</title>
    <script src="https://cdn.tailwindcss.com"></script>

</head>
<body class="bg-gray-700">
<!-- component -->
  <nav class="flex items-center justify-between bg-white shadow border-blue-700 py-4">
        <div class="flex items-center text-gray-800 ml-5">
          <a href="/" class="font-semibold lg:text-2xl text-xl">MAHA</a>
        </div>

        <div class="relative mx-auto text-gray-600 lg:block">
          <form action="/search" method="GET" class="items-center">
            <input
                class="border-2 border-gray-300 bg-white h-10 pl-2 pr-8 rounded-lg text-sm focus:outline-none"
                type="search" name="query" placeholder="Search">
            <button type="submit" class="absolute right-0 top-0 mt-3 mr-2">
                <svg class="text-gray-600 h-4 w-4 fill-current" xmlns="http://www.w3.org/2000/svg" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 56.966 56.966" style="enable-background:new 0 0 56.966 56.966;" xml:space="preserve" width="512px" height="512px">
                  <path d="M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z"/>
                </svg>
            </button>
          </form>
        </div>
  </nav>

  <ul class="grid grid-cols-3 ml-5 mt-2">
    <% data.data.forEach(item => { %>
      <li class="rounded-lg flex w-24 flex-col" onclick="fetchChapters('<%= item.id %>', '<%= item.attributes.title.en %>')">
        <!-- <a href="https://api.mangadex.org/manga/<%= item.id %>/feed" class="block relative"> -->
        <!-- <p class="w-[1rem]"><%= item.attributes.description.en %></p> -->
  
        <% if (item.coverFileName) { %>
          <img
            src="https://uploads.mangadex.org/covers/<%= item.id %>/<%= item.coverFileName %>"
            alt="Cover for <%= item.attributes.title.en %>"
            class="h-44 rounded-lg"
          />

        <% } else { %>
          <p>No cover available</p>
        <% } %>

        <div class="-translate-y-[1.5rem] bg-gray-700 opacity-80 p-1">
          <div>
            <p class=" text-xs text-white truncate"><%= item.attributes.title.en %></p>
          </div>
          <!-- <div>
            <h3><%= item.attributes.year %></h3>
            <h3> Chapter <%= item.attributes.lastChapter %></h3>
          </div> -->
        </div>
      </li>
    <% }) %>
  </ul> 

  <div id="motherchapterContainer" class="fixed inset-0 h-screen bg-gray-700 bg-opacity-80 justify-center flex hidden">
    <div class="mt-10 w-80">
      <div class="justify-between flex bg-white items-center pl-4 rounded-tl-lg rounded-tr-lg">
        <p class="text-xs overflox-x-hidden" id="mangaTitle"></p>
        <button onclick="closeChapModal()" class="p-4 rounded-lg">x</button>
      </div>
      
      <div class="bg-white rounded-bl-lg rounded-br-lg pl-2 pb-2"> 
        <div id="chapterContainer" class="flex flex-wrap w-80 gap-2 overflow-y-auto max-h-[30rem]"></div>
      </div>
    </div>
  </div>  

    
    <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
    <script>

      function closeChapModal(){
        document.getElementById("motherchapterContainer").classList.add("hidden");
      }

      async function fetchChapters(mangaID, mangaTitle) {
        try {
          const response = await fetch(`/chapter?id=${mangaID}`); // Send GET request to /chapter
          if (!response.ok) {
            throw new Error("Failed to fetch chapter data.");
          }

          document.getElementById("mangaTitle").textContent = mangaTitle;
          const data = await response.json(); // Get the JSON data
          console.log("Chapter data:", data); // Check data in console

          // ✅ Get chapter IDs and sort them correctly, then remove duplicate chapters
          const chapterIDs = [];

          data.data
          .sort((a, b) => Number(a.attributes.chapter) - Number(b.attributes.chapter)) // Sort chapters
          .forEach((chapter) => {
            const chapterNumber = Number(chapter.attributes.chapter);

            // ✅ Check if chapterNumber is already in chapterIDs
            if (!chapterIDs.some((ch) => Number(ch.attributes.chapter) === chapterNumber)) {
              chapterIDs.push(chapter); // ✅ Push only unique chapters
            }
          });
    
          console.log("Chapter IDs:", chapterIDs); // Print sorted and unique IDs

          const ChapCont = document.getElementById("chapterContainer");
          ChapCont.innerHTML = "";
          const MotherChapCont = document.getElementById("motherchapterContainer");
          MotherChapCont.classList.remove("hidden");

          chapterIDs.forEach((chapter) => {
            const button = document.createElement("button");
            button.textContent = `Chapter ${chapter.attributes.chapter}`; // Button label
            button.className ="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded";

            // ✅ Open chapter in new tab when clicked
            button.addEventListener("click", () => {
              window.open(`/read?id=${chapter.id}`, "_blank");
            });

            ChapCont.appendChild(button);
          });
    
        } catch (error) {
          console.error("Error fetching chapters:", error.message);
        }
      }
    </script>    
  </body>
</html>